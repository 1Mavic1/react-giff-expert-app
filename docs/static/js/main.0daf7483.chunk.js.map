{"version":3,"sources":["Components/AddCategory.js","Helpers/GetGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","input","setinput","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAElBC,mBAAS,IAFS,mBAErCC,EAFqC,KAE9BC,EAF8B,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAS,IAErBR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAiBO,OACnCN,EAAS,MAIb,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAASE,EAAEQ,OAAOF,a,+BCNbG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,kDAEqCC,UAAWH,GAFhD,oEAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,kCAAKA,EAAL,WCHCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAAEA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAoBvC,OAdAC,qBAAU,WACNxB,IACKyB,MAAK,SAAAC,GAEFC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEb,UAEZ,CAACpB,IAEGqB,EDjB2BQ,GAAlBhB,EAFmB,EAExBN,KAAYa,EAFY,EAEZA,QAiBvB,OAhBIO,QAAQC,IAAIf,GACZc,QAAQC,IAAIR,GAgBZ,qCACI,6BAAKpB,IACHoB,GAAW,WACZ,qBAAKJ,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEIA,GADEA,EAAIC,aE5BzBmB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,cAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAQ9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQ8C,EAAWtB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MChB3BgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0daf7483.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n   \r\n    const [input, setinput] = useState(''); \r\n    const handleInputChange = (e) =>{\r\n        setinput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(input.trim().length > 2)\r\n        {\r\n            setCategories(cats => [ input , ...cats ]);\r\n            setinput('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input \r\n                type = \"text\" \r\n                value = {input}\r\n                onChange = {handleInputChange}\r\n            /> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","export const getGifs = async(category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q= ${ encodeURI( category )  } Dota&limit=10&api_key=Pl4BOgiYbPP9u12w5Mz7IWKKM2VaRVGm`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n         return{\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images?.downsized_medium.url\r\n         }\r\n     })\r\n    //console.log(gifs);\r\n    return gifs;\r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log(id,title,url)  \r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src ={url} alt ={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../Hooks/useFetchGif';\r\n// import { getGifs } from '../Helpers/GetGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n        \r\n        const {data:images,loading} = useFetchGif();\r\n        console.log(images);\r\n        console.log(loading);\r\n\r\n\r\n\r\n\r\n        // const [images, setimages] = useState([])\r\n\r\n        // useEffect( ()=>{\r\n        //     getGifs( category ).then(setimages);\r\n        // },[category])\r\n\r\n   \r\n    \r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && 'Cargando'}\r\n             <div className=\"card-grid\">\r\n                    {\r\n                        images.map( (img) => (\r\n                            <GifGridItem \r\n                            key ={img.id}\r\n                            {...img}\r\n                            />\r\n                        )\r\n                    )\r\n                    }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../Helpers/GetGifs\";\r\n\r\n\r\nexport const useFetchGif = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs()\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    console.log(imgs);\r\n                    setstate({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                }, 3000); \r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const HanddleAdd = () => {\r\n    //     //setCategories([...categories,'Hola']);\r\n    //     setCategories(cats => [...categories,'Hola'] );\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GiffExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                    <GifGrid \r\n                    key = {category}\r\n                    category = {category}/>\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n        )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}